package euler.problem.p00;

import java.math.BigInteger;

import euler.problem.AbstractEuler;

public class Euler002 extends AbstractEuler {

	private long max;

	public Euler002(long max) {
		this.max = max;
	}

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the
	 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * Find the sum of all the even-valued terms in the sequence which do not
	 * exceed max.
	 */
	@Override
	public void compute() {
		long sum = 0;
		long f1 = 1;
		long f2 = 1;
		long f3 = f1 + f2;
		while (f3 <= max) {
			sum += f3;
			f1 = f2 + f3;
			f2 = f3 + f1;
			f3 = f1 + f2;
		}
		result = BigInteger.valueOf(sum);
	}

	/**
	 * 
	 * @param args
	 */
	public static void main(String... args) {
		compute(new Euler002(4000000));
	}

}
